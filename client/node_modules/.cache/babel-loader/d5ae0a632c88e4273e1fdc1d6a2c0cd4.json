{"ast":null,"code":"import ShopActionTypes from './shop.types'; //import { firestore } from 'firebase';\n\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nexport var fetchCollectionsStart = function fetchCollectionsStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport var fetchCollectionsFailure = function fetchCollectionsFailure(errorMessage) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(function (snapshot) {\n      var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(function (error) {\n      return dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\zhann\\Documents\\React\\e-commerce-react2\\client\\src\\redux\\shop\\shop.actions.js"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CACA;;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AAGA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AACxCC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,GAAP;AAAA,CAA9B;AAGP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,cAAD;AAAA,SAAqB;AACxDH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,IAAAA,OAAO,EAAEF;AAF+C,GAArB;AAAA,CAAhC;AAIP,OAAO,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,YAAY;AAAA,SAAK;AACpDP,IAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,IAAAA,OAAO,EAAEE;AAF2C,GAAL;AAAA,CAA5C;AAKP,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC5C,SAAO,UAAAC,QAAQ,EAAI;AACf,QAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACRE,GADL,GAEKC,IAFL,CAEU,UAAAC,QAAQ,EAAI;AACd,UAAMZ,cAAc,GAAGN,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KALL,EAMKa,KANL,CAMW,UAAAC,KAAK;AAAA,aAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAZ;AAAA,KANhB;AAQH,GAXD;AAaH,CAdM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n//import { firestore } from 'firebase';\r\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\r\n\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,    \r\n});\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n        collectionRef\r\n            .get()\r\n            .then(snapshot => {\r\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n                dispatch(fetchCollectionsSuccess(collectionsMap));\r\n            })\r\n            .catch(error => dispatch(fetchCollectionsFailure(error.message)));    \r\n        \r\n    }\r\n    \r\n};"]},"metadata":{},"sourceType":"module"}