{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n  apiKey: \"AIzaSyDUr4yo9rQTdBnt-ey-S61vRuPkn69uRWg\",\n  authDomain: \"e-commerce-react2.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-react2.firebaseio.com\",\n  projectId: \"e-commerce-react2\",\n  storageBucket: \"\",\n  messagingSenderId: \"280007278479\",\n  appId: \"1:280007278479:web:0d3473da756ab1b7\"\n};\nexport var addCollectionAndDocuments =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(collectionKey, objectToAdd) {\n    var collectionRef, batch;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            collectionRef = firestore.collection(collectionKey);\n            batch = firestore.batch();\n            objectToAdd.forEach(function (obj) {\n              var newDocRef = collectionRef.doc();\n              batch.set(newDocRef, obj);\n            });\n            _context.next = 5;\n            return batch.commit();\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addCollectionAndDocuments(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var convertCollectionsSnapshotToMap = function convertCollectionsSnapshotToMap(collections) {\n  var transformedCollection = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title: title,\n      items: items\n    };\n  });\n  return transformedCollection.reduce(function (accumalator, collection) {\n    accumalator[collection.title.toLowerCase()] = collection;\n    return accumalator;\n  }, {});\n};\nexport var getCurrentUser = function getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    var unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport var createUserProfileDocument =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (userAuth) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            //if object exists we query db\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context2.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context2.sent;\n\n            if (snapShot.exists) {\n              _context2.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context2.prev = 9;\n            _context2.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](9);\n            console.log(\"error creating an user\", _context2.t0.massage);\n\n          case 17:\n            return _context2.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfirebase.initializeApp(config);\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore(); //for google authentication\n\nexport var googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(googleProvider);\n};\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\zhann\\Documents\\React\\e-commerce-react2\\client\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","firestore","collection","batch","forEach","obj","newDocRef","doc","set","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumalator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","userAuth","createUserProfileDocument","additionalData","userRef","uid","get","snapShot","exists","displayName","email","createdAt","Date","console","log","massage","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDUr4yo9rQTdBnt-ey-S61vRuPkn69uRWg\",\r\n    authDomain: \"e-commerce-react2.firebaseapp.com\",\r\n    databaseURL: \"https://e-commerce-react2.firebaseio.com\",\r\n    projectId: \"e-commerce-react2\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"280007278479\",\r\n    appId: \"1:280007278479:web:0d3473da756ab1b7\"\r\n};\r\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    const batch = firestore.batch();\r\n    objectToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj);\r\n    });\r\n    return await batch.commit();\r\n};\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n        const { title, items } = doc.data();\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        }\r\n    });\r\n    return transformedCollection.reduce((accumalator, collection) => {\r\n        accumalator[collection.title.toLowerCase()] = collection;\r\n        return accumalator;\r\n    }, {}\r\n    );\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n        }, reject);\r\n    });\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    //if object exists we query db\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    if (!snapShot.exists) {\r\n        const { displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        } catch (error) {\r\n            console.log(\"error creating an user\", error.massage);\r\n        }\r\n    }\r\n    return userRef;\r\n\r\n} \r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n//for google authentication\r\n\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}