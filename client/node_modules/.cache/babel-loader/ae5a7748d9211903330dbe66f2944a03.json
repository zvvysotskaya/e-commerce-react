{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var addItemToCart = function addItemToCart(cartItems, cartItemToAdd) {\n  var exisistingCartItem = cartItems.find(function (cartItem) {\n    return cartItem.id === cartItemToAdd.id;\n  });\n\n  if (exisistingCartItem) {\n    return cartItems.map(function (cartItem) {\n      return cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n        quantity: cartItem.quantity + 1\n      }) : cartItem;\n    });\n  }\n\n  return [].concat(_toConsumableArray(cartItems), [_objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })]);\n};\nexport var removeItemFromCart = function removeItemFromCart(cartItems, cartItemToRemove) {\n  var existingCartItem = cartItems.find(function (cartItem) {\n    return cartItem.id === cartItemToRemove.id;\n  });\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(function (cartItem) {\n      return cartItem.id !== cartItemToRemove.id;\n    });\n  }\n\n  return cartItems.map(function (cartItem) {\n    return cartItem.id === cartItemToRemove.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity - 1\n    }) : cartItem;\n  });\n};","map":{"version":3,"sources":["C:\\Users\\zhann\\Documents\\React\\e-commerce-react2\\client\\src\\redux\\cart\\cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","exisistingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","existingCartItem","filter"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYC,aAAZ,EAA8B;AACvD,MAAMC,kBAAkB,GAAGF,SAAS,CAACG,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAlC;AAAA,GAAvB,CAA3B;;AACA,MAAIH,kBAAJ,EAAwB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAc,UAAAF,QAAQ;AAAA,aAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBAAwCD,QAAxC;AAAkDG,QAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAAhF,WAAsFH,QAA1F;AAAA,KAAtB,CAAP;AACH;;AACD,sCAAWJ,SAAX,sBAA0BC,aAA1B;AAAyCM,IAAAA,QAAQ,EAAE;AAAnD;AACH,CANM;AAOP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACR,SAAD,EAAYS,gBAAZ,EAAiC;AAC/D,MAAMC,gBAAgB,GAAGV,SAAS,CAACG,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAArC;AAAA,GAAvB,CAAzB;;AACA,MAAIK,gBAAgB,CAACH,QAAjB,KAA8B,CAAlC,EAAqC;AACjC,WAAOP,SAAS,CAACW,MAAV,CAAiB,UAAAP,QAAQ;AAAA,aAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAArC;AAAA,KAAzB,CAAP;AACH;;AACD,SAAOL,SAAS,CAACM,GAAV,CAAc,UAAAF,QAAQ;AAAA,WACzBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,qBACWD,QADX;AACqBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAmB;AADlD,SAEMH,QAHmB;AAAA,GAAtB,CAAP;AAIH,CATM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const exisistingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\r\n    if (exisistingCartItem) {\r\n        return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem);\r\n    }\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}];\r\n}\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\r\n    if (existingCartItem.quantity === 1) {\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n    }\r\n    return cartItems.map(cartItem =>\r\n        cartItem.id === cartItemToRemove.id\r\n            ? { ...cartItem, quantity: cartItem.quantity -1 }\r\n            : cartItem )\r\n}"]},"metadata":{},"sourceType":"module"}