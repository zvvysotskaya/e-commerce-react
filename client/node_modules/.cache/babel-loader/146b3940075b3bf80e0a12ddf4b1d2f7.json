{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nvar INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(function (cartItem) {\n          return cartItem.id !== action.payload.id;\n        })\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\Users\\zhann\\Documents\\React\\e-commerce-react2\\client\\src\\redux\\cart\\cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAGA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,kBAArB;AAAyC,+BAClCH,KADkC;AAErCH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFsB;;AAIzC,SAAKJ,eAAe,CAACW,QAArB;AAA+B,+BACxBJ,KADwB;AAE3BF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFG;;AAI/B,SAAKZ,eAAe,CAACa,oBAArB;AAA2C,+BACpCN,KADoC;AAEvCF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAnC;AAAA,SAA/B;AAF4B;;AAI3C,SAAKhB,eAAe,CAACiB,WAArB;AAAkC,+BAC3BV,KAD2B;AAE9BF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFC;;AAIlC,SAAKZ,eAAe,CAACkB,UAArB;AAAiC,+BAC1BX,KAD0B;AAE7BF,QAAAA,SAAS,EAAE;AAFkB;;AAKjC;AAAS,aAAOE,KAAP;AAtBb;AAwBH,CAzBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\r\n\r\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN: return {\r\n            ...state,\r\n            hidden: !state.hidden\r\n        };\r\n        case CartActionTypes.ADD_ITEM: return {\r\n            ...state,\r\n            cartItems: addItemToCart(state.cartItems, action.payload)\r\n        };\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART: return {\r\n            ...state,\r\n            cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\r\n        };\r\n        case CartActionTypes.REMOVE_ITEM: return {\r\n            ...state,\r\n            cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n        }\r\n        case CartActionTypes.CLEAR_CART: return {\r\n            ...state,\r\n            cartItems: []\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}