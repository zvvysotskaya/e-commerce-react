{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhann\\\\Documents\\\\React\\\\e-commerce-react2\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart as _googleSignInStart, emailSignInStart as _emailSignInStart } from '../../redux/user/user.actions';\n\nvar SignIn = function SignIn(_ref) {\n  var emailSignInStart = _ref.emailSignInStart,\n      googleSignInStart = _ref.googleSignInStart;\n\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userCredentials = _useState2[0],\n      setCredentials = _useState2[1];\n\n  var email = userCredentials.email,\n      password = userCredentials.password;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              emailSignInStart(email, password);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sign in with your email and password \"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    value: email,\n    required: true,\n    handleChange: handleChange,\n    label: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    value: password,\n    required: true,\n    handleChange: handleChange,\n    label: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, '', \"Sign In With Google\", ''))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    googleSignInStart: function googleSignInStart() {\n      return dispatch(_googleSignInStart());\n    },\n    emailSignInStart: function emailSignInStart(email, password) {\n      return dispatch(_emailSignInStart({\n        email: email,\n        password: password\n      }));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\zhann\\Documents\\React\\e-commerce-react2\\client\\src\\components\\sign-in\\sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './sign-in.styles.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' });\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n        setCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n    \r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password </span>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput name=\"email\" value={email} required handleChange={handleChange} label=\"email\" />\r\n                <FormInput name=\"password\" value={password} required handleChange={handleChange} label=\"password\" />\r\n                <div className=\"buttons\">\r\n                    <CustomButton type='submit'>Sign in</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>{''}Sign In With Google{''}</CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}